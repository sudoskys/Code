# 餐厅订单查询系统

## 1. 项目概述

本项目是一个简单的餐厅订单查询系统，使用C语言实现。用户可以通过该系统添加顾客订单，并且能够通过顾客姓名查询订单信息。

## 2. 实现细节

### 2.1 数据存储

为了使得数据能够持久化，程序将每个订单的信息存储在一个结构体中，并且将所有订单数据保存在一个二进制文件/TXT文件当中。在程序启动时，会加载文件中的订单数据，这样便可以不用担心程序关闭后数据丢失的问题。具体来说，程序使用了以下数据结构：

```c
struct Order {
    char name[MAX_NAME_LEN];
    int table_number;
    int num_dishes;
    char dishes[MAX_DISHES][MAX_NAME_LEN];
    float total_price;
};

struct Order orders[MAX_ORDERS];
int num_orders = 0;
```

其中，`MAX_ORDERS`、`MAX_NAME_LEN`和`MAX_DISHES`分别表示最大订单数量、姓名最大长度和最多菜品数量。程序将所有订单存储在`orders`数组中，`num_orders`变量记录当前已经存储的订单数量。同时，程序定义了两个函数`load_orders()`和`save_orders()`来加载和保存订单数据。具体的实现方法请参考代码部分的注释。

### 2.2 添加订单

当用户选择添加订单时，程序会提示用户输入顾客姓名、桌号、菜品数量、每个菜品的名称以及订单总价。程序将这些信息存储在一个新的`Order`结构体实例中，并将其添加到`orders`数组末尾，最后调用`save_orders()`函数保存修改后的订单数据。具体的实现方法请参考代码部分的注释。

### 2.3 查询订单

当用户选择查询订单时，程序会提示用户输入要查询的顾客姓名。程序遍历`orders`数组，找到所有姓名与要查询姓名相同的订单，并且输出它们的详细信息。如果没有找到任何匹配的订单，则输出“未找到该顾客的订单!”。具体的实现方法请参考代码部分的注释。

### 2.4 删除订单

当用户选择删除订单时，程序会提示用户输入要删除的订单。如果没有找到任何匹配的订单，则输出“未找到“。

